Time: O(n), Space: O(k)

class KthLargest {
    int k;
    priority_queue<int, vector<int>, greater<int>> pq;
public:
    KthLargest(int k, vector<int>& nums) : k(k){
        ios_base::sync_with_stdio(0);
        cin.tie(0);
        int i = 0;
        while(i < nums.size()){
            if(pq.size() >= k and nums[i] <= pq.top()){
                i++;
                continue;
            }
            else if(pq.size() >= k and nums[i] > pq.top())
                pq.pop();
            pq.push(nums[i]);
            i++;
        }
    }
    
    int add(int val) {
        if(pq.size() >= k and val <= pq.top())
            return pq.top();
        if(pq.size() >= k and val <= pq.top())
            return pq.top();
        if(pq.size() >= k and val > pq.top())
            pq.pop();
        pq.push(val);
        return pq.top();
    }
};
