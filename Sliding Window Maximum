Time: O(n), Space: O(n)

class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(nums.empty() or k <= 0)
            return {};
        priority_queue<pair<int, int>> pq;
        int n = nums.size();
        for(int i = 0 ; i < k ; i++)
            pq.push({nums[i], i});
        vector<int> res;
        for(int i = 0 ; i <= n-k ; i++){
            while(!pq.empty() and pq.top().second < i)
                pq.pop();
            res.push_back(pq.top().first);
            if(i+k < n)
                pq.push({nums[i+k], i+k});
        }
        return res;
    }
};
