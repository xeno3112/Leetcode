Time: O(n), Space: O(n)

class Solution {
public:
    int longestConsecutive(vector<int>& nums) {
        int n = nums.size();
        if(n == 0)
            return 0;
        if(n == 1)
            return 1;
        unordered_set<int> s;
        int res = 1;
        for(int i = 0 ; i < n ; i++)
            s.insert(nums[i]);
        for(int i = 0 ; i < n ; i++){
            if(s.find(nums[i]-1) != s.end())
                continue;
            int j = nums[i]+1;
            int counter = 1;
            while(s.find(j) != s.end()){
                counter++;
                j++;
            }
            res = max(res, counter);
        }
        return res;
    }
};
