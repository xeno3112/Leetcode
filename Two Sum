Time: O(n), Space: O(n)

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n = nums.size();
        if(n <= 1)
            return {};
        vector<int> res;
        unordered_map<int, int> s;
        for(int i = 0 ; i < n ; i++){
            if(s.find(target-nums[i]) != s.end()){
                int x = min(i, s[target-nums[i]]);
                int y = max(i, s[target-nums[i]]);
                res.push_back(x);
                res.push_back(y);
                break;
            }
            s[nums[i]] = i;
        }
        return res;
    }
};
