Time: O(n*m + k), Space:(n*m + k)

class Solution {
public:
    string shortestCommonSupersequence(string str1, string str2) {
        int m = str1.size(), n = str2.size();
        vector<vector<int>> dp(n+1, vector<int>(m+1));
        for(int i = 1 ; i <= n ; i++){
            for(int j = 1 ; j <= m ; j++){
                if(str2[i-1] == str1[j-1])
                    dp[i][j] = 1+dp[i-1][j-1];
                else
                    dp[i][j] = max(dp[i][j-1], dp[i-1][j]);
            }
        }
        string res = "";
        int i = n, j = m;
        while(i > 0 and j > 0){
            if(str1[j-1] == str2[i-1]){
                res = str2[i-1] + res;
                i--;
                j--;
            }
            else{
                if(dp[i][j] == dp[i][j-1]){
                    res = str1[j-1] + res;
                    j--;
                }
                else{
                    res = str2[i-1] + res;
                    i--;
                }
            }
        }
        while(i > 0){
            res = str2[i-1] + res;
            i--;
        }
        while(j > 0){
            res = str1[j-1] + res;
            j--;
        }
        return res;
    }
};
