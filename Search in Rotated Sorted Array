Time: O(logn), Space: O(1)

class Solution {
public:
    int bs(vector<int>& nums, int i, int j, int target){
        while(i <= j){
            int mid = (i+j)/2;
            if(nums[mid] == target)
                return mid;
            if(nums[mid] < target)
                i = mid+1;
            else
                j = mid-1;
        }
        return -1;
    }
    int search(vector<int>& nums, int target) {
        int n = nums.size();
        if(n == 0)
            return -1;
        int i = 0, j = n-1, mid;
        while(i <= j){
            mid = (i+j)/2;
            if(mid == n-1 or nums[mid+1] < nums[mid])
                break;
            if(nums[mid] < nums[0])
                j = mid-1;
            else
                i = mid+1;
        }
        mid++;
        if(mid == n)
            return bs(nums, 0, n-1, target);
        else{
            if(nums[mid] <= target and target <= nums[n-1])
                return bs(nums, mid, n-1, target);
            else
                return bs(nums, 0, mid-1, target);
        }
        return -1;
    }
};
