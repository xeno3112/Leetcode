Time: O(n), Space: O(h)

class Solution {
public:
    Solution(){
        ios_base::sync_with_stdio(0);
        cin.tie(0);
    }
    TreeNode* build(vector<int>& inorder, vector<int>& postorder, int s, int e, int &i){
        if(s > e)
            return NULL;
        TreeNode* root = new TreeNode(postorder[i--]);
        if(s == e)
            return root;
        int j = s;
        for( ; j <= e ; j++)
            if(inorder[j] == root->val)
                break;
        root->right = build(inorder, postorder, j+1, e, i);
        root->left = build(inorder, postorder, s, j-1, i);
        return root;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int n = inorder.size()-1;
        return build(inorder, postorder, 0, n, n);
    }
};
