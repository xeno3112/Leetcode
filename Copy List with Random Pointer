Time: O(n), Space: O(n)

class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(!head)
            return head;
        Node* curr = head->next;
        Node* newHead = new Node(head->val);
        Node* temp = newHead;
        unordered_map<Node*, Node*> m;
        m[head] = newHead;
        while(curr){
            temp->next = new Node(curr->val);
            temp = temp->next;
            m[curr] = temp;
            curr = curr->next;
        }
        curr = head;
        temp = newHead;
        while(curr){
            if(curr->random)
                temp->random = m[curr->random];
            temp = temp->next;
            curr = curr->next;
        }
        return newHead;
    }
};
